package com.example.lf_rps;

import android.os.Bundle;

import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.snackbar.Snackbar;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.*;

import java.util.Random;

public class MainActivity extends AppCompatActivity {

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Toolbar toolbar = findViewById(R.id.toolbar);
    setSupportActionBar(toolbar);

    FloatingActionButton fab = findViewById(R.id.fab);
    fab.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View view) {
        Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                .setAction("Action", null).show();


      }
    });

  }

  private int userScore = 0;
  private int compScore = 0;

  public String compWeapon;
  public String userWeapon;


    public void rockBtnClick(View v) {
    userWeapon = "Rock";
    compWeapon = String.valueOf(Weapon.getRandom());

    switch(compWeapon) {
      case "Rock" :
        TextView c = (TextView) findViewById(R.id.outputLabel2);
        c.setText("computer chose:" + compWeapon);

        TextView w = (TextView) findViewById(R.id.win);
        w.setText("Tie!");

        TextView s = (TextView) findViewById(R.id.score);

        s.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(userScore) );

        break;

      case "Paper" :
        TextView c1 = (TextView) findViewById(R.id.outputLabel2);
        c1.setText("computer chose:" + compWeapon);

        TextView w1 = (TextView) findViewById(R.id.win);
        w1.setText("Computer Wins!");

        TextView s1 = (TextView) findViewById(R.id.score);

        s1.setText("computer: " + String.valueOf(++compScore) + "user: " + String.valueOf(userScore) );

        break;

      case "Scissors" :
        TextView c2 = (TextView) findViewById(R.id.outputLabel2);
        c2.setText("computer chose:" + compWeapon);

        TextView w2 = (TextView) findViewById(R.id.win);
        w2.setText("User won!");

        TextView s2 = (TextView) findViewById(R.id.score);

        s2.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(++userScore) );

        break;

    }

    }


  public void paperBClick(View v) {
    userWeapon = "Paper";
    Weapon.getRandom();

    switch (compWeapon) {
      case "Rock":
        TextView c = (TextView) findViewById(R.id.outputLabel2);
        c.setText("computer chose:" + compWeapon);

        TextView w = (TextView) findViewById(R.id.win);
        w.setText("User won!");

        TextView s = (TextView) findViewById(R.id.score);
        s.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(++userScore));

        break;

      case "Paper":
        TextView c1 = (TextView) findViewById(R.id.outputLabel2);
        c1.setText("computer chose:" + compWeapon);

        TextView w1 = (TextView) findViewById(R.id.win);
        w1.setText("Tie!");

        TextView s1 = (TextView) findViewById(R.id.score);
        s1.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(userScore));

        break;

      case "Scissors":
        TextView c2 = (TextView) findViewById(R.id.outputLabel2);
        c2.setText("computer chose:" + compWeapon);

        TextView w2 = (TextView) findViewById(R.id.win);
        w2.setText("Computer won!");

        TextView s2 = (TextView) findViewById(R.id.score);

        s2.setText("computer: " + String.valueOf(++compScore) + "user: " + String.valueOf(userScore));

        break;

    }
  }



  public void scissorBClick(View v) {
    userWeapon = "Scissors";
    Weapon.getRandom();

    switch(compWeapon) {
      case "Rock":
        TextView c = (TextView) findViewById(R.id.outputLabel2);
        c.setText("computer chose:" + compWeapon);

        TextView w = (TextView) findViewById(R.id.win);
        w.setText("Computer wins!");

        TextView s = (TextView) findViewById(R.id.score);

        s.setText("computer: " + String.valueOf(++compScore) + "user: " + String.valueOf(userScore));

        break;

      case "Paper":
        TextView c1 = (TextView) findViewById(R.id.outputLabel2);
        c1.setText("computer chose:" + compWeapon);

        TextView w1 = (TextView) findViewById(R.id.win);
        w1.setText("User Wins!");

        TextView s1 = (TextView) findViewById(R.id.score);

        s1.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(++userScore));

        break;

      case "Scissors":
        TextView c2 = (TextView) findViewById(R.id.outputLabel2);
        c2.setText("computer chose:" + compWeapon);

        TextView w2 = (TextView) findViewById(R.id.win);
        w2.setText("Tie!");

        TextView s2 = (TextView) findViewById(R.id.score);

        s2.setText("computer: " + String.valueOf(compScore) + "user: " + String.valueOf(userScore));

        break;
    }
  }





  @Override
  public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return true;
  }

  @Override
  public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();

    //noinspection SimplifiableIfStatement
    if (id == R.id.action_settings) {
      return true;
    }

    return super.onOptionsItemSelected(item);
  }

  public enum Weapon {

    ROCK("Rock"),
    PAPER("Paper"),
    SCISSORS("Scissors");
    private String message;

    private Weapon(String msg) {
      message = msg;
    }

    @Override
    public String toString() {
      return message;
    }

    public static Weapon getRandom() {
      Weapon.values();
      //get random 0 1 2 from array

      Weapon[] values = Weapon.values();  //making the array called values
      Random r = new Random();            //making random variable
      return (values[r.nextInt(values.length)]);  //returning random spot from values array

    }

  }

  ;
}
